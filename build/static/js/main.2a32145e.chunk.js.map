{"version":3,"sources":["Components/DynamicForm/DynamicForm.js","App.js","index.js"],"names":["DynamicForm","model","setData","title","useState","city","setCity","form","setForm","HandleOnBlur","value","includes","prevData","console","log","className","map","input","htmlFor","key","label","list","Array","isArray","type","name","onBlur","e","target","onChange","id","val","Object","entries","c","for","pattern","onClick","App","data","test","link","style","marginTop","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a32145e.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport './styles.css'\r\nconst DynamicForm = ({model,title,setData}) => {\r\n    const validate= (regex,text)=> {\r\n        const regexp = regex;\r\n        return regexp.test(text);\r\n    }\r\n    const [city,setCity]=useState()\r\n    const [form,setForm]=useState([])\r\n      \r\n   const HandleOnBlur=(value) =>{\r\n    if(value===\"\" || form.includes(value)) return null;\r\n       setForm((prevData)=>{\r\n           return [...prevData,value]\r\n       })\r\n       console.log(form)\r\n   }\r\n   const handleSubmit=(value)=>{\r\n        setData(value)\r\n   }\r\n    return (\r\n        <div className=\"dynamic-form\">\r\n            {model.map((input)=>(\r\n                <div key={input.key} className=\"form-control\">\r\n                    <label htmlFor={input.key} key={input.key} className=\"label\" >\r\n                        {input.label}\r\n                    </label>\r\n                    <div className=\"input-field\">\r\n                        {input.list ? (\r\n                            <div>\r\n                               {Array.isArray(input.value) ? (\r\n                                <div>\r\n                                \r\n                                <input type={input.type} name={input.label} list={input.list} onBlur={(e)=>HandleOnBlur(e.target.value)} onChange={(e)=>setCity(e.target.value)}/>\r\n                                <datalist id={input.list}>\r\n                                \r\n                                    { input.value.map((val)=>(\r\n                                        <option value={val}/>\r\n                                    ))}\r\n                                </datalist>\r\n                                </div>   \r\n                                )\r\n\r\n                               : (\r\n                                <div>\r\n                                \r\n                                <input type={input.type} name={input.label} list=\"city\" onBlur={(e)=>HandleOnBlur(e.target.value)} />\r\n                                    <datalist id=\"city\">\r\n                                    \r\n                                    { Object.entries(input.value).map((val)=>{\r\n                                        if(val[0]=== city){\r\n                                            let cities = val[1];\r\n                                            return cities.map(c =>(<option value={c}/>))\r\n                                        }\r\n                                    })}\r\n                                    </datalist>\r\n                                </div>  \r\n                                 )}\r\n                             \r\n                              \r\n                            </div>\r\n                        ):(\r\n                            <div>\r\n                                {Array.isArray(input.value) ?(\r\n                                    <div className=\"box\">\r\n                                    {input.value.map((val)=>(\r\n                                        <div >\r\n                                            <input  type={input.type} id={input.label} name={input.label} list={input.list} value={val} onBlur={(e)=>HandleOnBlur(e.target.value)} />\r\n                                            <label for={input.label}>{val}</label><br></br>\r\n                                        </div>\r\n                                      ))} \r\n                                      </div>\r\n                                     ): (\r\n                                        <div>\r\n                                        {input.pattern ?(\r\n                                            <div>\r\n                                                <input onBlur={(e)=>HandleOnBlur(e.target.value)} type={input.type} name={input.label} list={input.list} className=\"text-input\" />\r\n                                            </div>\r\n                                            ) :(\r\n                                            <input onBlur={(e)=>HandleOnBlur(e.target.value)} type={input.type} name={input.label} list={input.list} className=\"text-input\" />\r\n                                        )}\r\n                                        </div>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            \r\n            <button type=\"submit\" onClick={()=>handleSubmit(form)} >submit</button>\r\n            <button type=\"submit\" onClick={()=>setForm('')} >cleat</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DynamicForm\r\n","\nimport './App.css';\nimport {useState} from 'react'\nimport DynamicForm from './Components/DynamicForm/DynamicForm'\n\nconst App=()=> {\n  const [data,setData]=useState()\n  console.log((/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test('vikivarun7@gmail.com'))\n  return (\n    <div className=\"App\">\n      <DynamicForm\n      title=\"register\"\n      setData={setData}\n      model={[\n        {key:\"name\",label:\"name\",type:\"text\"},\n        {key:\"age\",label:\"age\",type:\"number\"},\n        {key:\"email\",label:\"email\",type:\"email\",pattern:'/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/'},\n        {key:\"phoneNo\",label:\"phone no\",type:\"number\"},\n        {key:\"password\",label:\"password\",type:\"password\" ,pattern:'^([@#](?=[^aeiou]{7,13}$)(?=[[:alnum:]]{7,13}$)(?=.*[A-Z]{1,}.*$).+)$'},\n        {key:\"gender\",label:\"Gender\",type:\"radio\",value:[\"male\",\"female\",\"others\"]},\n        {key:\"skills\",label:\"skills\",type:\"checkbox\",value:[\"html\",\"css\",\"react\",\"javascript\"]},\n        {key:\"country\",label:\"country\",type:\"text\",list:'country',value:[\"india\",\"usa\",\"china\",\"japan\"],link:'city'},\n        {key:\"city\",label:\"city\",type:\"text\",list:'city',value:{\n          \"india\":[\"chennai\",\"mumbai\",\"delhi\",\"bangalore\"],\n          \"china\":[\"Shanghai\",\"Beijing\",\"Hong Kong\"],\n          \"japan\" : [\"Tokyo\",\"Osaka\",\"Yokohama\"],\n          \"usa\":[\"New York\",\"Los Angeles\",\"Chicago\",\"Oklahoma\",\"Denver\"]\n          }\n        },\n      ]}\n      />\n      <h2 style={{marginTop:20}}>\n      {JSON.stringify(data)}\n      </h2>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}